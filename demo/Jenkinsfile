node{
      environment{
        DOCKERHUB_CREDENTIALS = credentials('dockerHub')
      }

      stage("Repo"){
        checkout scm
        sh 'echo "ayudaaaa"'
      }

      stage('JunitTest') {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    dir("/var/lib/jenkins/workspace/Tingeso/demo") {
                        sh 'chmod +x ./gradlew'
                        sh './gradlew test'
                    }
          }
  		}

     /*stage('SonarQube analysis') {
    			
				dir("/var/lib/jenkins/workspace/Tingeso/demo") {
					withSonarQubeEnv('sonarqube') { // Will pick the global server connection you have configured
                        sh 'chmod 777 ./gradlew'
                        sh './gradlew sonarqube'
    					}
				
			  }
  		}*/

      stage("Build") {
          sh """ docker build --build-arg JAR_FILE=build/libs/\\*.jar -t demo ."""
      }

      stage('Login DockerHub'){
          sh  'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }

      /*stage('Push'){
        dir("/var/lib/jenkins/workspace/Tingeso/demo"){
          sh 'docker push demo'
        }
      }

      stage("Run") {
        timeout(time: 80, unit: 'SECONDS') {
           catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
              sh 'docker run -i -p 8081:8081 demo'
           }
        }
      }
}